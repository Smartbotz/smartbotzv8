import { MongoClient, Db } from 'mongodb'
import { config } from './config'
export class db {
  constructor() {
    this.client = new MongoClient(config.mongo_db, {})
    this.client.connect((err: Error) => {
      if (err) throw err
      // console color pink for mongo
      console.log('\x1b[35m%s\x1b[0m', 'MongoDB connected')
    })
    this.db = this.client.db('jamal')
  }
  private client: MongoClient
  public db: Db
  async get(collection: string, query: object) {
    return await this.db.collection(collection).find(query).toArray()
  }
  async insert(collection: string, data: object) {
    return await this.db.collection(collection).insertOne(data)
  }
  async update(collection: string, query: object, data: object) {
    return await this.db.collection(collection).updateOne(query, data)
  }
  async delete(collection: string, query: any) {
    return await this.db.collection(collection).deleteOne(query)
  }
  async showAllCollection() {
    return await this.db.listCollections().toArray()
  }
  async showAllDataInCollection(collection: string) {
    return await this.db.collection(collection).find().toArray()
  }
  async saveName(collection: string, name: string) {
    const data = await this.db.collection(collection).findOne({ name: name })
    if (data == null) return await this.db.collection(collection).insertOne({ name: name })
    if (data !== null && data.name !== name) return await this.db.collection(collection).updateOne({ name: name }, { $set: name })
    return void 0
  }

  async reconnect() {
    this.client.close()
    this.client.connect()
    this.db = this.client.db('jamal') as Db
  }
}
